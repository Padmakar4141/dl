import pandas as pd
import sklearn.datasets as datasets
import numpy as np

boston = datasets.load_boston()

boston_df = pd.DataFrame(boston.data, columns = boston["feature_names"])

boston_df['target'] = boston['target']

boston_df.head()

boston_df.isnull().sum()

boston_df.plot(kind='box', figsize=(15,15))

def remove_outlier(data,col):
    Q1 = data[col].quantile(0.25)
    Q3 = data[col].quantile(0.75)
    iqr = Q3-Q1
    lower = Q1-1.5*iqr
    upper = Q3 + 1.5*iqr
    data[col] = np.clip(data[col],lower,upper)
    return data

def treat_outliers(data, cols):
    for col in cols:
        data1 = remove_outlier(data, col)
    return data1

treat_outliers(boston_df, boston_df.iloc[:,0::])

boston_df.plot(kind='box', figsize=(15,15))

import tensorflow as tf
from tensorflow import keras

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

scaler = StandardScaler()
X = boston_df.drop('target', axis=1)
y = boston_df['target']

columns = list(X.columns)

columns

type(columns)

X[columns] = scaler.fit_transform(X[columns])

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)

model = keras.Sequential([
    keras.layers.Dense(15, input_shape=(13,),activation='relu'),
    keras.layers.Dense(13,activation='relu'),
    keras.layers.Dense(1,activation='relu')
])

model.compile(loss='mean_absolute_error',optimizer='adam',metrics=['mean_absolute_error'])
model.fit(X_train, y_train, epochs=500, batch_size=32, validation_split=0.2)

model_1 = keras.Sequential([
    keras.layers.Dense(26, input_shape=(13,),activation='linear'),
    keras.layers.Dense(26,activation='linear'),
    keras.layers.Dense(1,activation='linear')
])
model_1.compile(loss='mean_absolute_error',optimizer='adam',metrics=['mean_absolute_error'])
model_1.fit(X_train, y_train, epochs=100, batch_size=32, validation_split=0.2)


result = model.evaluate(X_test, y_test)


result


y_pred = model.predict(X_test)

from sklearn.metrics import r2_score

score = r2_score(y_test, y_pred)


score




























